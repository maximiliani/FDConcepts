{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": null,
  "title": "FAIR Digital Type Profile",
  "description": "A schema for describing a FAIR Digital Type Profile.",
  "type": "object",
  "required": [
    "pid",
    "name",
    "description",
    "createdAt",
    "license",
    "contributors"
  ],
  "properties": {
    "pid": {
      "title": "PID",
      "description": "A automatically generated persistent identifier referring to this type profile.",
      "type": "string"
    },
    "name": {
      "title": "Type Name",
      "description": "A human readable name for the type profile",
      "type": "string",
      "maxLength": 128,
      "pattern": "^([!-~])+$"
    },
    "description": {
      "title": "Description",
      "description": "A human readable description of the type profile",
      "type": "string",
      "maxLength": 2048,
      "pattern": "(.|\n)*"
    },
    "createdAt": {
      "title": "Creation date",
      "description": "The date when this type profile was created in RFC 3339 format.",
      "type": "string",
      "format": "datetime",
      "examples": [
        "2024-ß2-05T12:00:00Z"
      ]
    },
    "lastModifiedAt": {
      "title": "Modification date",
      "description": "The date when this type profile was lastly modified in RFC 3339 format.",
      "type": "string",
      "format": "datetime",
      "examples": [
        "2024-ß2-05T12:00:01Z"
      ]
    },
    "license": {
      "title": "License",
      "description": "The license of this type profile. It is a PID or URL pointing to a license.",
      "type": "string",
      "examples": [
        "https://creativecommons.org/licenses/by/4.0/"
      ]
    },
    "contributors": {
      "title": "Contributors",
      "description": "Information about the creators/maintainers/contributors.",
      "type": "array",
      "items": {
        "title": "Provenance information",
        "description": "Information about a person, group, or organization.",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "title": "Type of the provenance information",
            "description": "The type specifies the kind of reference to the subject. It can be a URL, a Handle, an ORCiD, or some plain text.",
            "type": "string",
            "examples": [
              "Handle",
              "ORCiD"
            ],
            "enum": [
              "Handle",
              "ORCiD",
              "URL",
              "Text"
            ]
          },
          "url": {
            "title": "URL",
            "description": "A URL referring to a person, group, or organization. When ORCiD is chosen as a type, this refers to the ORCiD profile.",
            "type": "string",
            "examples": [
              "https://orcid.org/0009-0005-2800-4833"
            ]
          },
          "name": {
            "title": "Name",
            "description": "The name of a person, group, or organization",
            "type": "string",
            "examples": [
              "Nicolas Blumenröhr"
            ]
          },
          "email": {
            "title": "E-Mail address",
            "description": "An email address for a person, group, or organization",
            "type": "string",
            "examples": [
              "nicolas.blumenroehr@kit.edu"
            ]
          },
          "details": {
            "title": "Details",
            "type": "string",
            "format": "textarea",
            "maxLength": 1024
          }
        },
        "examples": [
          {
            "type": "orcid",
            "url": "https://orcid.org/0009-0005-2800-4833"
          },
          {
            "type": "plain",
            "name": "Nicolas Blumenröhr",
            "email": "nicolas.blumenroehr@kit.edu"
          }
        ]
      },
      "examples": [
        [
          {
            "type": "orcid",
            "url": "https://orcid.org/0009-0005-2800-4833"
          },
          {
            "type": "plain",
            "name": "Nicolas Blumenröhr",
            "email": "nicolas.blumenroehr@kit.edu"
          }
        ]
      ],
      "uniqueItems": false
    },
    "standards": {
      "title": "Applicable Standards or Recommendations",
      "description": "Standards or recommendations that are applicable to this type profile.",
      "type": "array",
      "format": "table",
      "uniqueItems": true,
      "items": {
        "type": "object",
        "title": "Standard or Recommendation",
        "required": [
          "natureOfApplicability",
          "issuer",
          "name"
        ],
        "properties": {
          "natureOfApplicability": {
            "title": "Nature of Applicability",
            "description": "The nature of the applicability of the standard to the type profile.",
            "type": "string",
            "enum": [
              "extends",
              "constrains",
              "specifies",
              "depends",
              "is_previous_version_of",
              "is_new_version_of",
              "is_semantically_identical",
              "is_semantically_similar"
            ]
          },
          "name": {
            "title": "Standard Name",
            "description": "Type ID or standard number/name",
            "type": "string",
            "maxLength": 1024
          },
          "issuer": {
            "title": "Issued By",
            "description": "The organization or entity that issued the standard.",
            "type": "string",
            "enum": [
              "ISO",
              "W3C",
              "ITU",
              "RFC",
              "DTR",
              "other"
            ]
          },
          "details": {
            "title": "Details",
            "description": "Additional details about the standard or recommendation",
            "type": "string",
            "format": "textarea",
            "maxLength": 2048
          }
        }
      }
    },
    "subSchemaRelation": {
      "title": "Relations for Sub-Schemas in Properties-Section",
      "description": "Describes, how the properties, the type is derived from, are related to each other. Each of them is assumed to be either mandatory or optional, which is defined as an obligation for each individual property below. With \"denyAdditionalProperties\" one defines an object with given properties below where additional properties are not allowed, and with \"allowAdditionalProperties\" one defines an object with given properties below where additional properties are allowed. With \"requestAll/Any/OneOfProperties\" and \"isNot\" the property obligations below are not reflected (possible contradictions) and all/any/exactly_one of the properties have to be given in the object or \"isNot\" negates the sub-schemas of the properties. By default, additional properties are allowed.",
      "type": "string",
      "enum": [
        "denyAdditionalProperties",
        "allowAdditionalProperties",
        "requestAllOfProperties",
        "requestAnyOfProperties",
        "requestOneOfProperties",
        "isNot"
      ],
      "default": "allowAdditionalProperties"
    },
    "restrictions": {
      "title": "Restrictions",
      "description": "Define type dependent restrictions with special keywords like  uniqueItems, maxItems, minItems or minProperties and maxProperties. Examples: \"uniqueItems\": true, \"maxItems\": 9",
      "type": "string",
      "maxLength": 4096
    },
    "default": {
      "title": "Default Value",
      "description": "A default value can be provided here. Needs to be a string representation of a JSON object that is compatible with these restrictions. String delimiters need to be escaped",
      "type": "string",
      "maxLength": 262144
    },
    "properties": {
      "type": "array",
      "title": "Properties",
      "description": "Type dependencies used for expressing how this type is built from other types",
      "items": {
        "title": "Property",
        "type": "object",
        "required": [
          "pid",
          "name"
        ],
        "properties": {
          "pid": {
            "title": "PID",
            "description": "PID referring to the data type or type profile this property uses",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "description": "Name assigned to dependent type in this context",
            "type": "string",
            "pattern": "^([!-~])+$",
            "maxLength": 256
          },
          "description": {
            "title": "Description",
            "description": "Description of how this data type/type profile is used in this context",
            "type": "string",
            "format": "textarea",
            "maxLength": 2048
          },
          "repeatable": {
            "title": "Repeatability",
            "description": "Cardinality of this property.",
            "type": "boolean",
            "default": false
          },
          "obligation": {
            "title": "Obligation",
            "description": "Describes if this property is optional or mandatory to be specified in the FDO.",
            "type": "string",
            "enum": [
              "Optional",
              "Mandatory"
            ],
            "default": "Optional"
          },
          "defaultValue": {
            "title": "Default Value",
            "description": "A default value can be provided here.",
            "type": [
              "string",
              "number",
              "boolean",
              "object",
              "array",
              "null"
            ],
            "maxLength": 262144,
            "default": null
          },
          "constantValue": {
            "title": "Constant Value",
            "description": "Used if the type has a constant value on all possible instances for this parameter. This value cannot be changed in the FDO",
            "type": [
              "string",
              "number",
              "boolean",
              "object",
              "array",
              "null"
            ],
            "maxLength": 262144
          }
        }
      }
    }
  }
}