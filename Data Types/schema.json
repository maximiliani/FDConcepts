{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": null,
  "type": "object",
  "title": "FAIR Digital Data Type",
  "description": "A type definition for FAIR Digital Data Types based on the former Basic Info Types.",
  "required": [
    "pid",
    "name",
    "description",
    "createdAt",
    "license",
    "contributors",
    "properties"
  ],
  "properties": {
    "pid": {
      "title": "PID",
      "description": "A automatically generated persistent identifier referring to this data type.",
      "type": "string"
    },
    "name": {
      "title": "Type Name",
      "description": "A human readable name for the data type",
      "type": "string",
      "maxLength": 128,
      "pattern": "^([!-~])+$"
    },
    "description": {
      "title": "Description",
      "description": "A human readable description of the data type",
      "type": "string",
      "maxLength": 2048,
      "pattern": "(.|\n)*"
    },
    "createdAt": {
      "title": "Creation date",
      "description": "The date when this data type was created in RFC 3339 format.",
      "type": "string",
      "format": "datetime",
      "examples": [
        "2024-ß2-05T12:00:00Z"
      ]
    },
    "lastModifiedAt": {
      "title": "Modification date",
      "description": "The date when this data type was lastly modified in RFC 3339 format.",
      "type": "string",
      "format": "datetime",
      "examples": [
        "2024-ß2-05T12:00:01Z"
      ]
    },
    "license": {
      "title": "License",
      "description": "The license of this data type. It is a PID or URL pointing to a license.",
      "type": "string",
      "examples": [
        "https://creativecommons.org/licenses/by/4.0/"
      ]
    },
    "contributors": {
      "title": "Contributors",
      "description": "Information about the creators/maintainers/contributors.",
      "type": "array",
      "items": {
        "title": "Provenance information",
        "description": "Information about a person, group, or organization.",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "title": "Type of the provenance information",
            "description": "The type specifies the kind of reference to the subject. It can be a URL, a Handle, an ORCiD, or some plain text.",
            "type": "string",
            "examples": [
              "Handle",
              "ORCiD"
            ],
            "enum": [
              "Handle",
              "ORCiD",
              "URL",
              "Text"
            ]
          },
          "url": {
            "title": "URL",
            "description": "A URL referring to a person, group, or organization. When ORCiD is chosen as a type, this refers to the ORCiD profile.",
            "type": "string",
            "examples": [
              "https://orcid.org/0009-0005-2800-4833"
            ]
          },
          "name": {
            "title": "Name",
            "description": "The name of a person, group, or organization",
            "type": "string",
            "examples": [
              "Nicolas Blumenröhr"
            ]
          },
          "email": {
            "title": "E-Mail address",
            "description": "An email address for a person, group, or organization",
            "type": "string",
            "examples": [
              "nicolas.blumenroehr@kit.edu"
            ]
          },
          "details": {
            "title": "Details",
            "type": "string",
            "format": "textarea",
            "maxLength": 1024
          }
        },
        "examples": [
          {
            "type": "orcid",
            "url": "https://orcid.org/0009-0005-2800-4833"
          },
          {
            "type": "plain",
            "name": "Nicolas Blumenröhr",
            "email": "nicolas.blumenroehr@kit.edu"
          }
        ]
      },
      "examples": [
        [
          {
            "type": "orcid",
            "url": "https://orcid.org/0009-0005-2800-4833"
          },
          {
            "type": "plain",
            "name": "Nicolas Blumenröhr",
            "email": "nicolas.blumenroehr@kit.edu"
          }
        ]
      ],
      "uniqueItems": false
    },
    "standards": {
      "title": "Applicable Standards or Recommendations",
      "description": "Standards or recommendations that are applicable to this data type.",
      "type": "array",
      "format": "table",
      "uniqueItems": true,
      "items": {
        "type": "object",
        "title": "Standard or Recommendation",
        "required": [
          "natureOfApplicability",
          "issuer",
          "name"
        ],
        "properties": {
          "natureOfApplicability": {
            "title": "Nature of Applicability",
            "description": "The nature of the applicability of the standard to the data type.",
            "type": "string",
            "enum": [
              "extends",
              "constrains",
              "specifies",
              "depends",
              "is_previous_version_of",
              "is_new_version_of",
              "is_semantically_identical",
              "is_semantically_similar"
            ]
          },
          "name": {
            "title": "Standard Name",
            "description": "Type ID or standard number/name",
            "type": "string",
            "maxLength": 1024
          },
          "issuer": {
            "title": "Issued By",
            "description": "The organization or entity that issued the standard.",
            "type": "string",
            "enum": [
              "ISO",
              "W3C",
              "ITU",
              "RFC",
              "DTR",
              "other"
            ]
          },
          "details": {
            "title": "Details",
            "description": "Additional details about the standard or recommendation",
            "type": "string",
            "format": "textarea",
            "maxLength": 2048
          }
        }
      }
    },
    "inheritedFrom": {
      "title": "Inherited From",
      "description": "The data types from which this data type inherits its properties.",
      "type": "array",
      "items": {
        "title": "Inherited Data Type",
        "description": "A PID to a data type from which this data type inherits its properties.",
        "type": "string"
      }
    },
    "properties": {
      "title": "Properties of the Data Type value",
      "description": "Restrictions on the type like regular expressions, enumeration max/min values etc,",
      "type": "object",
      "required": [
        "dataType"
      ],
      "properties": {
        "expression": {
          "title": "Expression",
          "description": "A semantic description of the category of the property.",
          "type": "string",
          "enum": [
            "Measurement Unit",
            "Format",
            "Character Set",
            "Encoding",
            "Measurement Unit",
            "Other"
          ]
        },
        "unitName": {
          "title": "Unit Name",
          "description": "For measurement units the name of the quantity (meter, second, Joule etc).",
          "type": "string",
          "maxLength": 1024
        },
        "unitSymbol": {
          "title": "Unit Symbol",
          "description": "For measurement units the symbol used for the quantity (m, s, J etc).",
          "type": "string",
          "maxLength": 1024
        },
        "definedBy": {
          "title": "Defined By",
          "description": "For derived measurement units the definition given as an expression of operator linked type identifiers. Allowed operators are: +. -, *, /, ^, (, ) For numerical constants here only the value is given as string. Numerical constant values x have to be additionally described in the restrictions area by  \"minimum\": x, \"maximum\": x in order to provide also a correct schema for such types.",
          "type": "string",
          "maxLength": 65536
        },
        "dataType": {
          "title": "Primary data type",
          "description": "The primary data type (see JSON specifications) of the property",
          "type": "string",
          "maxLength": 1024,
          "enum": [
            "string",
            "integer",
            "number",
            "boolean",
            "null"
          ]
        },
        "standard_uncertainty": {
          "title": "Standard Uncertainty",
          "description": "Relative standard uncertainty (i.e. u_r)",
          "type": "string",
          "maxLength": 1024
        },
        "restrict": {
          "title": "Restrictions",
          "description": "Define type dependent restrictions with special keywords like multipleOf, minimum, maximum, exclusiveMinimum and exclusiveMaximum for numbers and minLength, maxLength, enum or formats like date-time, email, hostname, ipv4, ipv6 or uri for strings. Examples: \"minimum\": -3.8, \"maximum\": -9.7  OR  \"minLength\": 5 , \"maxLength\": 6 OR \"format\" : \"time\" ",
          "type": "string",
          "maxLength": 4096
        },
        "regexp": {
          "title": "Regular Expression",
          "description": "This regular expression is only used for string data types. It is used to validate the string against a pattern. The flavour of the regular expression needs to be specified in the flavour field.",
          "type": "string",
          "maxLength": 4096
        },
        "enum": {
          "title": "Enumeration List",
          "description": "Needs to be compatible with data type: For mixed types like  [\"a\", \"bc\", 123, \"def\"] use NoType",
          "type": "string",
          "maxLength": 262144
        },
        "default": {
          "title": "Default Value",
          "description": "A default value can be provided here. Needs to be a string representation of a JSON object that is compatible with the restrictions. String delimiters need to be escaped",
          "type": "string",
          "maxLength": 262144
        },
        "regexFlavour": {
          "title": "Flavour of RegExp",
          "description": "The flavour of the regular expression used to validate the string against a pattern.",
          "type": "string",
          "maxLength": 1024,
          "default": "ecma-262-RegExp",
          "enum": [
            "ecma-262-RegExp",
            "php-RegExp",
            "javascript-RegExp",
            "python-RegExp"
          ]
        }
      }
    },
    "validationSchema": {
      "title": "Validation Schema",
      "description": "Schema used to validate an instance of this type ",
      "type": "object",
      "format": "textarea",
      "maxLength": 1048575
    }
  }
}