{
  "$schema": "https://json-schema.org/draft/2019-09/schema",
  "$id": null,
  "title": "FAIR Digital Operation",
  "description": "A schema for machine actionable operations based on strongly typed FAIR data.",
  "type": "object",
  "required": [
    "pid",
    "name",
    "description",
    "createdAt",
    "license",
    "contributors",
    "inputTypes",
    "outputTypes",
    "requiredAttributes",
    "execution"
  ],
  "properties": {
    "pid": {
      "title": "PID",
      "description": "A automatically generated persistent identifier referring to this operation.",
      "type": "string"
    },
    "name": {
      "title": "Type Name",
      "description": "A human readable name for the operation",
      "type": "string",
      "maxLength": 128,
      "pattern": "^([!-~])+$"
    },
    "description": {
      "title": "Description",
      "description": "A human readable description of the operation",
      "type": "string",
      "maxLength": 2048,
      "pattern": "(.|\n)*"
    },
    "createdAt": {
      "title": "Creation date",
      "description": "The date when this operation was created in RFC 3339 format.",
      "type": "string",
      "format": "datetime",
      "examples": [
        "2024-ß2-05T12:00:00Z"
      ]
    },
    "lastModifiedAt": {
      "title": "Modification date",
      "description": "The date when this operation was lastly modified in RFC 3339 format.",
      "type": "string",
      "format": "datetime",
      "examples": [
        "2024-ß2-05T12:00:01Z"
      ]
    },
    "license": {
      "title": "License",
      "description": "The license of this operation. It is a PID or URL pointing to a license.",
      "type": "string",
      "examples": [
        "https://creativecommons.org/licenses/by/4.0/"
      ]
    },
    "contributors": {
      "title": "Contributors",
      "description": "Information about the creators/maintainers/contributors.",
      "type": "array",
      "items": {
        "title": "Provenance information",
        "description": "Information about a person, group, or organization.",
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "title": "Type of the provenance information",
            "description": "The type specifies the kind of reference to the subject. It can be a URL, a Handle, an ORCiD, or some plain text.",
            "type": "string",
            "examples": [
              "Handle",
              "ORCiD"
            ],
            "enum": [
              "Handle",
              "ORCiD",
              "URL",
              "Text"
            ]
          },
          "url": {
            "title": "URL",
            "description": "A URL referring to a person, group, or organization. When ORCiD is chosen as a type, this refers to the ORCiD profile.",
            "type": "string",
            "examples": [
              "https://orcid.org/0009-0005-2800-4833"
            ]
          },
          "name": {
            "title": "Name",
            "description": "The name of a person, group, or organization",
            "type": "string",
            "examples": [
              "Nicolas Blumenröhr"
            ]
          },
          "email": {
            "title": "E-Mail address",
            "description": "An email address for a person, group, or organization",
            "type": "string",
            "examples": [
              "nicolas.blumenroehr@kit.edu"
            ]
          },
          "details": {
            "title": "Details",
            "type": "string",
            "format": "textarea",
            "maxLength": 1024
          }
        },
        "examples": [
          {
            "type": "orcid",
            "url": "https://orcid.org/0009-0005-2800-4833"
          },
          {
            "type": "plain",
            "name": "Nicolas Blumenröhr",
            "email": "nicolas.blumenroehr@kit.edu"
          }
        ]
      },
      "examples": [
        [
          {
            "type": "orcid",
            "url": "https://orcid.org/0009-0005-2800-4833"
          },
          {
            "type": "plain",
            "name": "Nicolas Blumenröhr",
            "email": "nicolas.blumenroehr@kit.edu"
          }
        ]
      ],
      "uniqueItems": false
    },
    "executableOn": {
      "title": "Executable on",
      "description": "This field describes the data types and type profiles that this operation can be executed on. If multiple types are specified, the operation can be executed on any ONE of them.",
      "type": "array",
      "minItems": 1,
      "items": {
        "title": "Executable on",
        "description": "An executable on instance consists out of the PID of the data type/type profile and an internal reference.",
        "type": "object",
        "required": [
          "pid",
          "internal_reference"
        ],
        "properties": {
          "pid": {
            "title": "PID of the data type/type profile",
            "description": "The PID referring to the data type/type profile that this operation can be executed on.",
            "type": "string"
          },
          "internal_reference": {
            "title": "Name of the internal reference",
            "description": "An internal reference is used to refer to the value linked to the key within the operation. It is usually a human-readable name because it is not exposed outside this operation. To insert a value referenced by such a internal reference into a parameter, use ${{reference_name}}.",
            "type": "string",
            "examples": [
              "orcidURL",
              "document"
            ]
          }
        }
      }
    },
    "returns": {
      "title": "Returns",
      "description": "This field describes the data types and type profiles that this operation returns. If multiple types are specified, the operation returns all of them.",
      "type": "array",
      "items": {
        "title": "Returns",
        "description": "A returns instance consists out of the PID of the data type/type profile and an internal reference.",
        "type": "object",
        "required": [
          "pid",
          "internal_reference"
        ],
        "properties": {
          "pid": {
            "title": "PID of the data type/type profile",
            "description": "The PID referring to the data type/type profile that this operation returns.",
            "type": "string"
          },
          "internal_reference": {
            "title": "Name of the internal reference",
            "description": "An internal reference is used to refer to the value linked to the key within the operation. It is usually a human-readable name because it is not exposed outside this operation. To insert a value referenced by such a internal reference into a parameter, use ${{reference_name}}.",
            "type": "string",
            "examples": [
              "mappedDocument",
              "orcidProfile"
            ]
          }
        }
      }
    },
    "environment": {
      "title": "Environment",
      "description": "This field describes the environment in which the operation is executed. It is a list of key-value pairs. This field is meant to be used for environment variables, API keys, and other environment-specific settings which are specified by the executor.",
      "type": "array",
      "items": {
        "title": "Environment variable",
        "description": "An environment variable is a key-value pair. The key is a PID, the value defined in the executor is referenced by the internal reference. There is a description for the environment variable.",
        "type": "object",
        "required": [
          "pid",
          "internal_reference",
          "description"
        ],
        "properties": {
          "pid": {
            "title": "PID of the environment variable",
            "description": "The PID referring to the environment variable.",
            "type": "string"
          },
          "internal_reference": {
            "title": "Name of the internal reference",
            "description": "An internal reference is used to refer to the value linked to the key within the operation. It is usually a human-readable name because it is not exposed outside this operation. To insert a value referenced by such a internal reference into a parameter, use ${{reference_name}}.",
            "type": "string",
            "examples": [
              "orcidAPIKey"
            ]
          },
          "description": {
            "title": "Description of the environment variable",
            "description": "A human-readable description of the environment variable.",
            "type": "string",
            "maxLength": 2048,
            "pattern": "(.|\n)*"
          }
        }
      }
    },
    "execution": {
      "title": "Definition of the execution",
      "description": "This field describes the execution of an operation. It varies depending on the type of operation. For a single operation, it is a single object. For a workflow, it is an array of objects. The schema of the objects is the same for both types of operations.",
      "type": "array",
      "items": {
        "title": "Operation step",
        "description": "An operation step describes a single step in the execution of an operation it can be called on recursively to enable complexly folded operation.",
        "type": "object",
        "required": [
          "title",
          "mode",
          "output"
        ],
        "properties": {
          "title": {
            "title": "Title of the operation step",
            "description": "A human-readable title that describes this operation step.",
            "type": "string",
            "examples": [
              "Download files",
              "Start mapping service",
              "Upload schema to Mapping-Service",
              "Map document"
            ]
          },
          "mode": {
            "title": "Mode of the operation step",
            "description": "The mode of an operation step can be either async or sync. Async means that all the contained operation steps are executed asynchronously, and all contained steps can be executed in parallel. Sync means that the operation steps are executed in the exact order they are specified in.",
            "type": "string",
            "enum": [
              "async",
              "sync"
            ],
            "examples": [
              "async",
              "sync"
            ]
          },
          "steps": {
            "title": "A recursive array of operation steps",
            "description": "This list contains all the steps that are executed in this operation step.",
            "type": "array",
            "items": {
              "$ref": "#/properties/execution"
            },
            "examples": [
              [
                {
                  "operation": "PID->Download file",
                  "url": "mpsSchema",
                  "result_internal_reference": "schema"
                },
                {
                  "operation": "PID->Download file",
                  "url": "mpsPlugin",
                  "result_internal_reference": "plugin"
                },
                {
                  "operation": "PID->Download file",
                  "url": "documentURL",
                  "result_internal_reference": "document"
                }
              ]
            ],
            "uniqueItems": false
          },
          "operation": {
            "title": "Reference to an operation",
            "description": "This field is used to reference an operation that is executed in this operation step. Usually, the value of this field is a PID.",
            "type": "string",
            "examples": [
              "PID->DockerMappingService"
            ]
          },
          "attributes": {
            "title": "Attributes of the operation",
            "description": "This field describes the attributes of an operation. It is a list of key-value pairs.",
            "type": "array",
            "items": {
              "title": "Attribute",
              "description": "An attribute is a key-value pair. The key is usually a PID, and the value is a string or an array of strings. The value can also be a reference to an internal reference.",
              "type": "object",
              "required": [
                "key",
                "value"
              ],
              "properties": {
                "key": {
                  "title": "Key/Name of the attribute",
                  "description": "Name how this attribute is called in the FD Operation or Operation Type Profile.",
                  "type": "string",
                  "examples": [
                    "plugins",
                    "url",
                    "method",
                    "payload"
                  ]
                },
                "value": {
                  "title": "Value of the attribute",
                  "description": "The value of the attribute can be anything. The value can also be an internal reference.",
                  "type": [
                    "object",
                    "array",
                    "string",
                    "boolean",
                    "number",
                    "null"
                  ],
                  "examples": [
                    [
                      "plugin"
                    ],
                    "mpsURL",
                    "PID->HTTPMethod.POST",
                    "schema",
                    "${{mpsURL}}/mappingExec/${{schemaID}}",
                    "document"
                  ],
                  "uniqueItems": false
                }
              },
              "examples": [
                {
                  "key": "plugins",
                  "value": [
                    "plugin"
                  ]
                },
                {
                  "key": "url",
                  "value": "mpsURL"
                },
                {
                  "key": "method",
                  "value": "PID->HTTPMethod.POST"
                },
                {
                  "key": "payload",
                  "value": "schema"
                },
                {
                  "key": "url",
                  "value": "${{mpsURL}}/mappingExec/${{schemaID}}"
                },
                {
                  "key": "method",
                  "value": "PID->HTTPMethod.POST"
                },
                {
                  "key": "payload",
                  "value": "document"
                }
              ]
            },
            "examples": [
              [
                {
                  "key": "plugins",
                  "value": [
                    "plugin"
                  ]
                }
              ],
              [
                {
                  "key": "url",
                  "value": "mpsURL"
                },
                {
                  "key": "method",
                  "value": "PID->HTTPMethod.POST"
                },
                {
                  "key": "payload",
                  "value": "schema"
                }
              ],
              [
                {
                  "key": "url",
                  "value": "${{mpsURL}}/mappingExec/${{schemaID}}"
                },
                {
                  "key": "method",
                  "value": "PID->HTTPMethod.POST"
                },
                {
                  "key": "payload",
                  "value": "document"
                }
              ]
            ],
            "uniqueItems": false
          },
          "output": {
            "title": "Output",
            "description": "This field describes all the used outputs of an operation step. ",
            "type": "array",
            "items": {
              "title": "Output Variable",
              "description": "The key points to the value generated by the execution of the operation step. This generated value is referred to by an internal reference.",
              "type": "object",
              "required": [
                "key",
                "internal_reference"
              ],
              "properties": {
                "key": {
                  "title": "Key of the output",
                  "description": "The key is used to reference the value generated by the execution of the operation step.",
                  "type": "string",
                  "examples": [
                    "httpStatusCode",
                    "serviceURL",
                    "groups.1"
                  ]
                },
                "internal_reference": {
                  "title": "Internal reference to the result",
                  "description": "This field is used to reference the result of an operation. It is usually a human-readable name because it is not exposed outside this operation.",
                  "type": "string",
                  "examples": [
                    "statusCode",
                    "mpsURL",
                    "orcid"
                  ]
                }
              }
            }
          },
          "operationTypeProfile": {
            "title": "Reference to an operation type profile",
            "description": "This field is used to reference an operation type profile that is executed in this operation step. Usually, the value of this field is a PID.",
            "type": "string",
            "examples": [
              "PID->HTTP"
            ]
          }
        },
        "examples": [
          {
            "title": "Download files",
            "mode": "async",
            "steps": [
              {
                "operation": "PID->Download file",
                "url": "document@PID->Schema@PID->DigitalObjectLocation",
                "output": [
                  {
                    "key": "file",
                    "internal_reference": "schema"
                  }
                ]
              },
              {
                "operation": "PID->Download file",
                "url": "document@PID->Schema@PID->Plugin@PID->DigitalObjectLocation",
                "output": [
                  {
                    "key": "file",
                    "internal_reference": "plugin"
                  }
                ]
              },
              {
                "operation": "PID->Download file",
                "url": "document@PID->DigitalObjectLocation",
                "output": [
                  {
                    "key": "file",
                    "internal_reference": "document"
                  }
                ]
              }
            ]
          },
          {
            "title": "Start mapping service",
            "mode": "sync",
            "operation": "PID->DockerMappingService",
            "attributes": [
              {
                "key": "plugins",
                "value": [
                  "plugin"
                ]
              }
            ],
            "output": [
              {
                "key": "serviceURL",
                "internal_reference": "mpsURL"
              }
            ]
          },
          {
            "title": "Upload schema to Mapping-Service",
            "mode": "sync",
            "operationTypeProfile": "PID->HTTP",
            "attributes": [
              {
                "key": "url",
                "value": "mpsURL"
              },
              {
                "key": "method",
                "value": "PID->HTTPMethod.POST"
              },
              {
                "key": "payload",
                "value": "schema"
              }
            ],
            "output": [
              {
                "key": "body.schemaID",
                "internal_reference": "schemaID"
              }
            ]
          },
          {
            "title": "Map document",
            "mode": "sync",
            "operationTypeProfile": "PID->HTTP",
            "attributes": [
              {
                "key": "url",
                "value": "${{mpsURL}}/mappingExec/${{schemaID}}"
              },
              {
                "key": "method",
                "value": "PID->HTTPMethod.POST"
              },
              {
                "key": "payload",
                "value": "document"
              }
            ],
            "output": [
              {
                "key": "body",
                "internal_reference": "mappedDocument"
              }
            ]
          }
        ]
      },
      "examples": [
        [
          {
            "title": "Download files",
            "mode": "async",
            "steps": [
              {
                "operation": "PID->Download file",
                "url": "document@PID->Schema@PID->DigitalObjectLocation",
                "output": [
                  {
                    "key": "file",
                    "internal_reference": "schema"
                  }
                ]
              },
              {
                "operation": "PID->Download file",
                "url": "document@PID->Schema@PID->Plugin@PID->DigitalObjectLocation",
                "output": [
                  {
                    "key": "file",
                    "internal_reference": "plugin"
                  }
                ]
              },
              {
                "operation": "PID->Download file",
                "url": "document@PID->DigitalObjectLocation",
                "output": [
                  {
                    "key": "file",
                    "internal_reference": "document"
                  }
                ]
              }
            ]
          },
          {
            "title": "Start mapping service",
            "mode": "sync",
            "operation": "PID->DockerMappingService",
            "attributes": [
              {
                "key": "plugins",
                "value": [
                  "plugin"
                ]
              }
            ],
            "output": [
              {
                "key": "serviceURL",
                "internal_reference": "mpsURL"
              }
            ]
          },
          {
            "title": "Upload schema to Mapping-Service",
            "mode": "sync",
            "operationTypeProfile": "PID->HTTP",
            "attributes": [
              {
                "key": "url",
                "value": "mpsURL"
              },
              {
                "key": "method",
                "value": "PID->HTTPMethod.POST"
              },
              {
                "key": "payload",
                "value": "schema"
              }
            ],
            "output": [
              {
                "key": "body.schemaID",
                "internal_reference": "schemaID"
              }
            ]
          },
          {
            "title": "Map document",
            "mode": "sync",
            "operationTypeProfile": "PID->HTTP",
            "attributes": [
              {
                "key": "url",
                "value": "${{mpsURL}}/mappingExec/${{schemaID}}"
              },
              {
                "key": "method",
                "value": "PID->HTTPMethod.POST"
              },
              {
                "key": "payload",
                "value": "document"
              }
            ],
            "output": [
              {
                "key": "body",
                "internal_reference": "mappedDocument"
              }
            ]
          }
        ],
        [
          {
            "title": "Extract ORCiD ID from ORCiD-URL",
            "mode": "sync",
            "operationTypeProfile": "PID -> regex",
            "attributes": [
              {
                "key": "pattern",
                "value": "https?://orcid.org/(\\d{4}-\\d{4}-\\d{4}-\\d{3}X?)"
              },
              {
                "key": "flavour",
                "value": "ECMA262"
              },
              {
                "key": "input",
                "value": "${{orcidURL}}"
              }
            ],
            "output": [
              {
                "key": "groups.1",
                "internal_reference": "orcid"
              }
            ]
          },
          {
            "title": "Get profile data from ORCID.org API",
            "mode": "sync",
            "operationTypeProfile": "PID -> HTTP",
            "attributes": [
              {
                "key": "url",
                "value": "https://orcid.org/api/${{orcid}}"
              },
              {
                "key": "method",
                "value": "PID -> HTTPMethod.GET"
              },
              {
                "key": "headers",
                "value": [
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer ${{apiKey}}"
                  }
                ]
              }
            ],
            "output": [
              {
                "key": "status",
                "internal_reference": "status"
              },
              {
                "key": "body",
                "internal_reference": "profile"
              }
            ]
          }
        ]
      ]
    }
  },
  "examples": [
    {
      "pid": "PID->GetORCiDProfileInformationViaRESTAPI",
      "title": "Get ORCiD Profile Information via REST API",
      "description": "This Operation retrieves the profile information of an ORCiD ID via the ORCiD API. The ORCiD number sequence is extracted from the ORCiD-Profile URL. An API Key for the ORCiD API is required and to be set in the environment.",
      "createdAt": "2024-02-05T12:00:00Z",
      "contributors": [
        {
          "type": "ORCiD",
          "url": "https://orcid.org/0009-0005-2800-4833"
        },
        {
          "type": "Text",
          "name": "Nicolas Blumenröhr",
          "email": "nicolas.blumenroehr@kit.edu"
        }
      ],
      "license": "https://creativecommons.org/licenses/by/4.0/",
      "executableOn": [
        {
          "pid": "PID->ORCiD",
          "internal_reference": "orcidURL"
        }
      ],
      "returns": [
        {
          "pid": "PID->ORCiDProfile",
          "internal_reference": "profile"
        },
        {
          "pid": "PID->HTTPStatusCode",
          "internal_reference": "status"
        }
      ],
      "environment": [
        {
          "pid": "PID->ORCiDAPIKey",
          "internal_reference": "apiKey",
          "description": "The API Key for the ORCiD API"
        }
      ],
      "execution": [
        {
          "title": "Extract ORCiD ID from ORCiD-URL",
          "mode": "sync",
          "operationTypeProfile": "PID -> regex",
          "attributes": [
            {
              "key": "pattern",
              "value": "https?://orcid.org/(\\d{4}-\\d{4}-\\d{4}-\\d{3}X?)"
            },
            {
              "key": "flavour",
              "value": "ECMA262"
            },
            {
              "key": "input",
              "value": "${{orcidURL}}"
            }
          ],
          "output": [
            {
              "key": "groups.1",
              "internal_reference": "orcid"
            }
          ]
        },
        {
          "title": "Get profile data from ORCID.org API",
          "mode": "sync",
          "operationTypeProfile": "PID -> HTTP",
          "attributes": [
            {
              "key": "url",
              "value": "https://orcid.org/api/${{orcid}}"
            },
            {
              "key": "method",
              "value": "PID -> HTTPMethod.GET"
            },
            {
              "key": "headers",
              "value": [
                {
                  "key": "Accept",
                  "value": "application/json"
                },
                {
                  "key": "Authorization",
                  "value": "Bearer ${{apiKey}}"
                }
              ]
            }
          ],
          "output": [
            {
              "key": "status",
              "internal_reference": "status"
            },
            {
              "key": "body",
              "internal_reference": "profile"
            }
          ]
        }
      ]
    },
    {
      "pid": "PID->MapWithMappingService",
      "title": "Map with mapping service",
      "description": "This is a FD Operation that enables to map a document with a given schema using the mapping service.",
      "createdAt": "2024-02-06T12:00:00Z",
      "contributors": [
        {
          "type": "orcid",
          "url": "https://orcid.org/0009-0005-2800-4833"
        },
        {
          "type": "plain",
          "name": "Nicolas Blumenröhr",
          "email": "nicolas.blumenroehr@kit.edu"
        }
      ],
      "license": "https://creativecommons.org/licenses/by/4.0/",
      "executableOn": [
        {
          "pid": "PID->MappableDocument",
          "internal_reference": "document"
        }
      ],
      "returns": [
        {
          "type": "PID->JSONDocument",
          "internal_reference": "mappedDocument"
        }
      ],
      "environment": [],
      "execution": [
        {
          "title": "Download files",
          "mode": "async",
          "steps": [
            {
              "operation": "PID->Download file",
              "url": "document@PID->Schema@PID->DigitalObjectLocation",
              "output": [
                {
                  "key": "file",
                  "internal_reference": "schema"
                }
              ]
            },
            {
              "operation": "PID->Download file",
              "url": "document@PID->Schema@PID->Plugin@PID->DigitalObjectLocation",
              "output": [
                {
                  "key": "file",
                  "internal_reference": "plugin"
                }
              ]
            },
            {
              "operation": "PID->Download file",
              "url": "document@PID->DigitalObjectLocation",
              "output": [
                {
                  "key": "file",
                  "internal_reference": "document"
                }
              ]
            }
          ]
        },
        {
          "title": "Start mapping service",
          "mode": "sync",
          "operation": "PID->DockerMappingService",
          "attributes": [
            {
              "key": "plugins",
              "value": [
                "plugin"
              ]
            }
          ],
          "output": [
            {
              "key": "serviceURL",
              "internal_reference": "mpsURL"
            }
          ]
        },
        {
          "title": "Upload schema to Mapping-Service",
          "mode": "sync",
          "operationTypeProfile": "PID->HTTP",
          "attributes": [
            {
              "key": "url",
              "value": "mpsURL"
            },
            {
              "key": "method",
              "value": "PID->HTTPMethod.POST"
            },
            {
              "key": "payload",
              "value": "schema"
            }
          ],
          "output": [
            {
              "key": "body.schemaID",
              "internal_reference": "schemaID"
            }
          ]
        },
        {
          "title": "Map document",
          "mode": "sync",
          "operationTypeProfile": "PID->HTTP",
          "attributes": [
            {
              "key": "url",
              "value": "${{mpsURL}}/mappingExec/${{schemaID}}"
            },
            {
              "key": "method",
              "value": "PID->HTTPMethod.POST"
            },
            {
              "key": "payload",
              "value": "document"
            }
          ],
          "output": [
            {
              "key": "body",
              "internal_reference": "mappedDocument"
            }
          ]
        }
      ]
    }
  ]
}